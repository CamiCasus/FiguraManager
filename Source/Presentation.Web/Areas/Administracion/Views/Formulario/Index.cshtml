@using Syncfusion.JavaScript.Models
@model AsignarPermisoDto

<div class="row">
    <div class="col-sm-6">
        <div class="dash-tile dash-tile-2x">
            <div class="dash-tile-header">
                <i class="fa fa-cogs"></i> @FormularioResources.OpcionesSistema
            </div>
            <div class="dash-tile-content">
                <div class="dash-tile-content-inner-fluid">
                    @(Html.EJ().TreeGrid("TreeGridContainer")
                    .ChildMapping("FormulariosHijosList")
                    .TreeColumnIndex(2)
                    .EnableResize(true)
                    .Columns(co =>
                    {
                        co.Field("Id").HeaderText(FormularioResources.Id).Width(10).Add();
                        co.Field("Orden").HeaderText("Orden").Width(10).Visible(false).Add();
                        co.Field("ResourceKey").HeaderText(FormularioResources.Formulario).Width(100).Add();
                    }
                    )
                    .ClientSideEvents(eve =>
                    {
                        eve.RowSelected("FormularioIndex.rowSelectedTree");

                    })
                    .SizeSettings(ss => ss.Width("100%").Height("410px"))
                    .Datasource(Model.FormularioList)
                    )
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-6">
        <div class="dash-tile remove-margin">
            <div class="dash-tile-header">
                <i class="fa fa-user"></i> @FormularioResources.Roles
            </div>
            <div class="dash-tile-content">
                <div class="dash-tile-content-inner-fluid">
                    @(Html.EJ().Grid<RolDto>("RolGrid")
                    .AllowResizing()
                    .EnableRowHover(false)
                    .AllowSelection(false)
                    .Columns(col =>
                    {
                        col.Field("Id").HeaderText(RolResources.Id).Width(20).Add();
                        col.Field("Nombre").HeaderText(RolResources.Rol).Width(100).Add();
                        col.HeaderText(FormularioResources.Permisos).Commands(command =>
                        {
                            command.Type("detail")
                                   .ButtonOptions(new ButtonProperties()
                                   {
                                       Text = FormularioResources.Ver,
                                       Width = "60px",
                                       Click = "FormularioIndex.onClickRol",
                                       CssClass = "btn-Permiso"
                                   }).Add();
                        })
                        .IsUnbound(true)
                        .TextAlign(TextAlign.Center)
                        .Width(80)
                        .Add();
                    })
                    .Datasource(Model.RolList)
                    )
                </div>
            </div>
            @using (Html.BeginForm("ActualizarPermisos", "Formulario", new { area = "Administracion" }, FormMethod.Post, new { @id = "frmPermiso", @class = "login-form form-inline" }))
            {
                <div class="dash-tile-header">
                    <div class="dash-tile-options">
                        <button type="submit" class="btn btn-primary hide"><i class="fa fa-floppy-o"></i> @FormularioResources.Asignar</button>
                    </div>
                    <i class="fa fa-pencil-square-o"></i> @FormularioResources.Permisos
                </div>
                <div class="dash-tile-content">
                    <div class="dash-tile-content-inner-fluid">
                        <h5 class="page-header-sub"><b>@FormularioResources.Formulario : </b><span id="NombreFormulario"></span></h5>
                        <h5 class="page-header-sub"><b>@FormularioResources.Rol : </b><span id="NombreRol"></span></h5>
                        <div id="PermisoListDiv" class="controls" style="display:none;">
                            <div class="ckbox ckbox-success col-sm-4">
                                <input type="checkbox" id="TipoPermiso1" data-permiso="1"><label for="TipoPermiso1">Mostrar</label>
                            </div>
                            <div class="ckbox ckbox-success col-sm-4">
                                <input type="checkbox" id="TipoPermiso2" data-permiso="2"><label for="TipoPermiso2">Crear</label>
                            </div>
                            <div class="ckbox ckbox-success col-sm-4">
                                <input type="checkbox" id="TipoPermiso3" data-permiso="3"><label for="TipoPermiso3">Editar</label>
                            </div>
                            <div class="ckbox ckbox-success col-sm-4">
                                <input type="checkbox" id="TipoPermiso4" data-permiso="4"><label for="TipoPermiso4">Eliminar</label>
                            </div>
                            <div class="ckbox ckbox-success col-sm-4">
                                <input type="checkbox" id="TipoPermiso5" data-permiso="5"><label for="TipoPermiso5">Imprimir</label>
                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>
@Html.HiddenFor(model => model.RolId)
@Html.HiddenFor(model => model.FormularioId)
@Html.HiddenFor(model => model.Orden)


@section scripts{
    <script type="text/javascript" src="@Url.Script("~/Content/ViewsJs/FormularioIndex.js")"></script>
    <script type="text/javascript">

        FormularioIndex.init({
            urlObtenerPermisos: '@Url.Action("ObtenerPermisos", "Formulario", new { area = "Administracion" })',
            seleccioneFormulario: '@FormularioResources.SeleccioneFormulario',
            seleccioneFormularioNoModulo: '@FormularioResources.SeleccioneFormularioNoModulo'
        });

    </script>

}